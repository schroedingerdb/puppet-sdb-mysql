# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   Summarise what the function does here
#
Puppet::Functions.create_function(:'sdb_mysql_get_array_with_instance_name') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    
    raise(Puppet::ParseError, "sdb_mysql_get_array_with_instance_name(): Wrong number of arguments " +
      "given (#{args.size} for 2)") if args.size < 2
    
    new_users = {}

    if args[0].is_a?(Hash)

      args[0].each do |key, value|
        new_users[args[1]+ " " + key] = value
        new_users[args[1]+ " " + key]['instance_name'] = args[1]
        new_users[args[1]+ " " + key]['defaults_file'] = "/etc/" + args[1] + "/my.cnf"
        
        # if user key exists then it is a grants hash
        if ! value.has_key?("user")
          new_users[args[1]+ " " + key]['user_host'] = key
        end
        
      end
    end
    
    return new_users
  
  end
end
